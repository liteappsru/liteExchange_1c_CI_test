Функция ПодключитьОбработку(ИмяОбработки) Экспорт
	Каталог = леСерверПовтИсп.КаталогОбработчиков();
	
	Если НЕ Прав(Каталог, 1) = "\" Тогда
		Каталог = Каталог + "\";
	КонецЕсли;
	ИмяФайла = Каталог + ИмяОбработки + ".epf";
	
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		Обработка = ЗагрузитьОбработку(ИмяФайла, ИмяОбработки);		
	ИначеЕсли ИмяОбработки = "леLiteExchange2" Тогда // Извлечь обработку из макета и повторить
		Макет = ПолучитьОбщийМакет("леМакетliteExchange2");
		Попытка
			Макет.Записать(ИмяФайла);		
		Исключение
			леЛоггирование.СообщитьОбОшибке("Ошибка при извлечении обработки " + ИмяОбработки + ": " + ОписаниеОшибки());
		КонецПопытки;
		Обработка = ЗагрузитьОбработку(ИмяФайла, ИмяОбработки);
	КонецЕсли;
	
	Если Не Обработка = Неопределено Тогда
		Возврат Обработка;
	КонецЕсли;
	
	Возврат Обработки[ИмяОбработки].Создать();	
КонецФункции

Функция ЗагрузитьОбработку(ИмяФайла, ИмяОбработки)
	Защита = Новый ОписаниеЗащитыОтОпасныхДействий;
	Защита.ПредупреждатьОбОпасныхДействиях = Ложь;
	
	Попытка
		Обработка = ВнешниеОбработки.Создать(ИмяФайла, Ложь, Защита);
		Возврат Обработка;
	Исключение
		леЛоггирование.СообщитьОбОшибке("Ошибка при подключении обработки " + ИмяОбработки + ": " + ОписаниеОшибки());			
	КонецПопытки;
	Возврат Неопределено;
КонецФункции

Функция ВыполнитьФункцию(ИмяОбработки, ИмяФункции, Параметры) Экспорт
	Обработка = ПодключитьОбработку(ИмяОбработки);
	РезультатВыполнения = Неопределено;
	Выполнить("РезультатВыполнения = Обработка." + ИмяФункции + "(Параметры)");
	Возврат РезультатВыполнения;
КонецФункции

Функция ПриЗаписиОбъектаВыполнитьОбработку(Источник) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ЗаписьВходящихДанных") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("Источник", Источник.Ссылка);
	Параметры.Вставить("Приложение", "liteExchange");
	Если ОбщегоНазначения.РежимОтладки() Тогда
		леПодключаемыеОбработчики.ВыполнитьПодключаемыйОбработчикВФоне(Параметры);
	Иначе
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(Параметры);
		ФоновыеЗадания.Выполнить("леПодключаемыеОбработчики.ВыполнитьПодключаемыйОбработчикВФоне", МассивПараметров, "", "Подключаемый обработчик");
	КонецЕсли;
КонецФункции

Функция ВыполнитьПодключаемыйОбработчикВФоне(Параметры) Экспорт
	Источник = Параметры.Источник;
	
	Префикс = Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить();
	
	Обработка = Обработки.леАнализаторДанных.Создать();
	Обработка.ВходящиеДанные = Источник;
	Обработка.ВыполнитьОбработку();
	
	Источник = Обработка.ИсходящиеДанные;
	
	Индекс = Источник.Найти(Параметры.Источник);
	Если Не Индекс = Неопределено Тогда
		Источник.Удалить(Индекс);
	КонецЕсли;
	
	леВыгружаемыеОбъекты = Неопределено;
	МассивОбъектов = Новый Массив;	
	
	Для Каждого Элемент Из Источник Цикл
		ОбъектСтруктурой = леРаботаСJSON.Объект1сВПростыеТипы(Элемент, Ложь, Ложь);
		МассивОбъектов.Добавить(ОбъектСтруктурой);		
	КонецЦикла;
	
	ОбъектСтруктурой = леРаботаСJSON.Объект1сВПростыеТипы(Параметры.Источник, Ложь, Истина);
	МассивОбъектов.Добавить(ОбъектСтруктурой);
	
	ИсходящиеДанные = леРаботаСJSON.ДанныеВJSON(МассивОбъектов);
	
	Выборка = ПолучитьНастройки();
	МассивЗаписей = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если  ЗначениеЗаполнено(Выборка.СтрокаПодключения) Тогда
			Ответ = леКоннекторHTTP.ОтправитьТекст(ИсходящиеДанные, Выборка.СтрокаПодключения);
			Если Ответ.КодСостояния = 200 Тогда			
			КонецЕсли;	
		ИначеЕсли ЗначениеЗаполнено(Выборка.КаталогОбмена) Тогда
			ТекстовыйДокумент = Новый ТекстовыйДокумент;
			ТекстовыйДокумент.УстановитьТекст(ИсходящиеДанные);
			ИмяФайла = "le" + ТекущаяУниверсальнаяДатаВМиллисекундах();
			ТекстовыйДокумент.Записать(Выборка.КаталогОбмена + ИмяФайла + ".txt");
		Иначе	
		КонецЕсли	
	КонецЦикла;

КонецФункции

Функция ПолучитьНастройки() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	леНастройкиТранспортаОбменаДанными.УзелОбмена КАК УзелОбмена,
		|	леНастройкиТранспортаОбменаДанными.СтрокаПодключения КАК СтрокаПодключения,
		|	леНастройкиТранспортаОбменаДанными.КаталогОбмена КАК КаталогОбмена
		|ИЗ
		|	РегистрСведений.леНастройкиТранспортаОбменаДанными КАК леНастройкиТранспортаОбменаДанными";	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();

	Возврат Выборка;
КонецФункции