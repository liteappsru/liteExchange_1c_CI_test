#Область ПрограммныйИнтерфейс
Функция ОтправитьОбъект1с(Данные, Адрес, Параметры = Неопределено) Экспорт
	леHTTPRequest = леПодключаемыеОбработчики.ПодключитьОбработку("леHTTPRequest");
	леHTTPRequest.Адрес = Адрес;
	леHTTPRequest.Объект1с = Данные;
	Возврат леHTTPRequest.ОтправитьДанные1сНаУдаленыйСервер(Данные, Адрес, Параметры);
КонецФункции

Функция ОтправитьТекст(Данные, Адрес, Параметры = Неопределено) Экспорт
	леHTTPRequest = леПодключаемыеОбработчики.ПодключитьОбработку("леHTTPRequest");
	леHTTPRequest.Адрес  = Адрес;
	леHTTPRequest.Данные = Данные;
	Возврат леHTTPRequest.ОтправитьДанные1сНаУдаленыйСервер(Данные, Адрес, Параметры);
КонецФункции

Функция ОтправитьJSON(Данные, Адрес, Параметры = Неопределено) Экспорт
	леHTTPRequest = леПодключаемыеОбработчики.ПодключитьОбработку("леHTTPRequest");
	леHTTPRequest.Адрес = Адрес;
	леHTTPRequest.JSON  = Данные;
	Возврат леHTTPRequest.ОтправитьДанные1сНаУдаленыйСервер(Данные, Адрес, Параметры);
КонецФункции

Функция ОтправитьФайл(Данные, Адрес, Параметры = Неопределено) Экспорт
	леHTTPRequest = леПодключаемыеОбработчики.ПодключитьОбработку("леHTTPRequest");
	леHTTPRequest.Адрес = Адрес;
	леHTTPRequest.Файл = Данные;
	Возврат леHTTPRequest.ОтправитьДанные1сНаУдаленыйСервер(Данные, Адрес, Параметры);
КонецФункции

Функция ОтправитьФайлКакДвоичныеДанные(Данные, Адрес, Параметры = Неопределено) Экспорт
	леHTTPRequest = леПодключаемыеОбработчики.ПодключитьОбработку("леHTTPRequest");
	леHTTPRequest.Адрес = Адрес;
	леHTTPRequest.Файл  = Данные;
	Возврат леHTTPRequest.ОтправитьДанные1сНаУдаленыйСервер(Данные, Адрес, Параметры);
КонецФункции
#КонецОбласти

 //   // В сети есть сайт http://example.com
 //   // Запросим содержимое его главной страницы.
 //
 //   // Подключаемся к сайту.
 //   Соединение = Новый HTTPСоединение(
 //       "example.com", // сервер (хост)
 //       80, // порт, по умолчанию для http используется 80, для https 443
 //       , // пользователь для доступа к серверу (если он есть)
 //       , // пароль для доступа к серверу (если он есть)
 //       , // здесь указывается прокси, если он есть
 //       Таймаут, // таймаут в секундах, 0 или пусто - не устанавливать
 //         // защищенное соединение, если используется https
 //   );
 //
 //   // Получаем текст корневой страницы через GET-запрос.
 //   Запрос = Новый HTTPЗапрос("/");
 //   // Если бы нужна была другая страница, мы бы указали,
 //   // например, "/about" или "/news".
 //
 //   Результат = Соединение.Получить(Запрос);
 //
 //   Сообщить("Нам вернули код: " + Результат.КодСостояния);
 //   // Что примерно означают коды результата запроса:
 //   // [100, 299] - хороший код возврата
 //   // [300, 399] - нас перенаправляют на другую страницу,
 //   //              причём 302 - код постоянного перенаправления
 //   // [400, 499] - ошибка запроса
 //   // [500, 599] - ошибка сервера
 //
 //   // в теле результата запроса - текст обычной html страницы
 //   Сообщить("Тело результата: " + Результат.ПолучитьТелоКакСтроку()); 